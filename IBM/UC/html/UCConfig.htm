<?xml version="1.0" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>UCConfig - config super-class which loads and stores configuration info.</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rev="made" href="mailto:root@localhost" />
</head>

<body style="background-color: white">

<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->

<ul>

	<li><a href="#name">NAME</a></li>
	<li><a href="#synopsis">SYNOPSIS</a></li>
	<li><a href="#description">DESCRIPTION</a></li>
</ul>
<!-- INDEX END -->

<hr />
<p>
</p>
<h1><a name="name">NAME</a></h1>
<p>UCConfig - config super-class which loads and stores configuration info (parameter name/value pairs).</p>
<p>
</p>
<hr />
<h1><a name="synopsis">SYNOPSIS</a></h1>
<p>use IBM::UC::UCConfig;</p>
<p>#################
# class methods #
#################</p>
<pre>
 $ob = UCConfig-&gt;new($v,$r,$s,$e,$ini);
   where:
     $v=reference to array of valid config parameter names
     $r=reference to array of required config parameters names
     $s=section-start tag in configuration file
     $e=section-end tag in configuration file
     $ini=configuration file (optional parameter)</pre>
<p>#######################
# object data methods #
#######################</p>
<p>### get versions ###</p>
<pre>
 $ini = getIniFile()   Name of configuration file
 $h = getParams()      Returns hash reference of parameter/value pairs from configuration file</pre>
<p>### set versions ###</p>
<p></p>
<p>########################
# other object methods #
########################</p>
<pre>
 $ob-&gt;initFromConfig($hr)   Initialises object data with name/value pairs (via hash reference)
 $ob-&gt;initFromConfigFile()  Load configuration file
 $ob-&gt;checkRequired()       Check that all required parameters have been initialised

</pre>
<p>
</p>
<hr />
<h1><a name="description">DESCRIPTION</a></h1>
<p>The UCConfig class is a super-class defining common functionality for configuration objects.
It stores configuration information (parameter name/value pairs) for use by its encapsulating class.
Initialisation of the config object can be via a configuration file (initFromConfigFile()) or via a 
hash map reference (initFromConfig($hashRef)).

</p>

</body>

</html>
