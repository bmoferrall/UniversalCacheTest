<?xml version="1.0" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>CVS - xxx</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rev="made" href="mailto:root@localhost" />
</head>

<body style="background-color: white">

<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->

<ul>

	<li><a href="#name">NAME</a></li>
	<li><a href="#synopsis">SYNOPSIS</a></li>
</ul>
<!-- INDEX END -->

<hr />
<p>
</p>
<h1><a name="name">NAME</a></h1>
<p>CVS - xxx</p>
<p>
</p>
<hr />
<h1><a name="synopsis">SYNOPSIS</a></h1>
<p>use IBM::UC::Repository::CVS;</p>
<p>#################.
# class methods #.
#################.</p>
<pre>
 $ob = CVS-&gt;new([$user,$pass,$repository,$clean]);
  where:
   $user=User name to access repository (optional parameter)
   $pass=Password to access repository (optional parameter)
   $repository=CVS repository location (optional parameter)
   $clean=clean existing source and build files first (optional parameter)</pre>
<p>The constructor creates an instance of the CVS class. All parameters are optional, but those present must be
in the order specified. Parameters not specified are defaulted to Environment.pm values.</p>
<p>#######################.
# object data methods #.
#######################.</p>
<p>### get versions ###</p>
<pre>
 $env = $ob-&gt;getEnv()
 $user = $ob-&gt;cvsUser()
 $pass = $ob-&gt;cvsPass()
 $repos = $ob-&gt;cvsRepository()
 $repos = $ob-&gt;cvsClean()</pre>
<p>### set versions ###</p>
<pre>
 $ob-&gt;cvsUser($user)
 $ob-&gt;cvsPass($pass)
 $ob-&gt;cvsRepository($repos)
 $ob-&gt;cvsClean(1)</pre>
<p>########################.
# other object methods #.
########################.</p>
<pre>
 $ob-&gt;checkout($dir_l,$dir_r[,$tag])    # Checkout from $dir_r (remote cvs branch location) to $dir_l
                                        # (local cvs location) using Tag $tag (optional parameter)
 
=head1 DESCRIPTION</pre>
<p>The CVS module encapsulates routines for interacting with a CVS repository. For example, <code>checkout()</code> will
checkout a branch of source from the repository to a branch on the local machine.</p>

</body>

</html>
